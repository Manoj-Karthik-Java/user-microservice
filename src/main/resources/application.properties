server.port=${PORT:0}
spring.application.name=photoappapiuser
eureka.client.serviceUrl.defaultZone=http://localhost:8010/eureka
spring.devtools.restart.enabled=true
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}


#token.secret = dgjorufhrsnjdu438fkdj38fdmcv7dm3ckvhrsnjjuwelueivhe848fhedldh5ndk
#token.expiration_time = 3600000
#gateway.ip = 127.0.0.1
#login.url.path = /users/login

spring.datasource.url=jdbc:mysql://localhost:3306/appsdevelopersblog
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update

spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

# use this command to enter port number and instance id via command line
# for windows mvn spring-boot:run -D"spring-boot.run.arguments=--spring.application.instance_id=manoj,--server.port=8399"
# for mac os mvn spring-boot:run -Dspring-boot.run.arguments="--spring.application.instance_id=manoj,--server.port=8399"

#management.endpoints.web.exposure.include=beans,health,mappings,httpexchanges
management.endpoints.web.exposure.include=*

# for below property ture is the default value. We are still using the below property somehow in case to avoid it setting to false
management.endpoint.health.enabled=true

management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true

# Here we need to provide full package details
logging.level.com.appsdevelopersblog.photoapp.api.users.PhotoAppApiUser.feign.AlbumsServiceClient = DEBUG

#resilience4j.circuitbreaker.circuit-breaker-aspect-order=1

# If 50% or more of the recent calls fail, the circuit breaker will open.
resilience4j.circuitbreaker.instances.albums-ws.failure-rate-threshold=50

# Enables auto transition from OPEN state to HALF-OPEN after the wait-duration-in-open-state has passed. In this case its 10000ms
resilience4j.circuitbreaker.instances.albums-ws.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.albums-ws.wait-duration-in-open-state=10000ms

# Circuit breaker makes decisions based on a fixed number of calls, rather than time.
resilience4j.circuitbreaker.instances.albums-ws.sliding-window-type=COUNT_BASED

# Only the last 2 calls are considered when calculating the failure rate. Useful for fast feedback/testing; in production, use a higher number like 10 or 100.
resilience4j.circuitbreaker.instances.albums-ws.sliding-window-size=2

# The circuit breaker won?t calculate the failure rate until it gets at least 1 call.
resilience4j.circuitbreaker.instances.albums-ws.minimum-number-of-calls=1

# Resilience4j allows you to listen to circuit breaker events (like onSuccess, onError, onStateTransition).
#These events are sent to event consumers (like loggers, metrics collectors, or custom listeners).
#This property controls how many such events are held in memory per instance.
resilience4j.circuitbreaker.instances.albums-ws.event-consumer-buffer-size=10